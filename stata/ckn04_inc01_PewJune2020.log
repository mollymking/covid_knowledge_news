--------------------------------------------------------------------------------
      name:  ckn04_inc01_PewJune2020
       log:  /Users/mollymking/Documents/SocResearch/COVID_Knowledge_News/covid_
> knowledge_news/stata/ckn04_inc01_PewJune2020.log
  log type:  text
 opened on:  14 May 2021, 17:28:46

. ***--------------------------***
. 
. //      project:        Knowledge of COVID & News Sources
. //  task:       Income variables
. //  data:       di "`dataset'"
. 
. //  github:     covid_knowledge_news
. //  OSF:                https://osf.io/qf624/
. 
. //  author:     Molly King
. 
. display "$S_DATE  $S_TIME"
14 May 2021  17:28:46

. 
. ***-----------------------------***
. // # PROGRAM SETUP
. ***-----------------------------***
. 
. version 16 // keeps program consistent for future replications

. set linesize 80

. clear all

. set more off

. 
. use $deriv/ckn03_know`dataset'.dta, clear
(01_PewJune2020 Knowledge variables)

. save $deriv/ckn`category'`dataset'.dta, replace // data that results at end
file ~/Documents/SocResearch/COVID_Knowledge_News/data/data_derv/ckn04_inc01_Pew
> June2020.dta saved

. 
. ***-----------------------------***
. // # COMBINE INCOME CATEGORIES FOR ONE BIG CATEGORY VARIABLE
. ***-----------------------------***
. 
. // USE OLD INCOME VARIABLE LABEL TO CREATE NEW VARIABLE LABEL
. *label list
. codebook f_income

--------------------------------------------------------------------------------
f_income                                                           Family income
--------------------------------------------------------------------------------

                  type:  numeric (byte)
                 label:  labels82

                 range:  [1,99]                       units:  1
         unique values:  10                       missing .:  0/9,654

              examples:  4     $30,000 to less than $40,000
                         6     $50,000 to less than $75,000
                         7     $75,000 to less than $100,000
                         8     $100,000 to less than $150,000

. *income uses value label X
. uselabel labels82, clear // takes label and converts it into data table

. // then can copy this and use it for creating new more robust data label for n
> ew variables
. 
. use $deriv/ckn`category'`dataset'.dta, clear
(01_PewJune2020 Knowledge variables)

. 
. label define inc_categories_`dataset' ///
>         1       "Less than 10,000" ///
>         2       "10,000 to less than 20,000" ///
>         3       "20,000 to less than 30,000" ///
>         4       "30,000 to less than 40,000" ///
>         5       "40,000 to less than 50,000" ///
>         6       "50,000 to less than 75,000" ///
>         7       "75,000 to less than 100,000" ///
>         8       "100,000 to less than 150,000" ///
>         9       "150,000 or more" ///
>         99      "Refused" 

. 
. 
. ***-----------------------------***
. // CREATE FAMILY INCOME VARIABLE
. 
. local family_income_variable f_income

. 
. tab `family_income_variable', m

                 Family income |      Freq.     Percent        Cum.
-------------------------------+-----------------------------------
             Less than $10,000 |        384        3.98        3.98
  $10,000 to less than $20,000 |        579        6.00        9.98
  $20,000 to less than $30,000 |        708        7.33       17.31
  $30,000 to less than $40,000 |        729        7.55       24.86
  $40,000 to less than $50,000 |        795        8.23       33.10
  $50,000 to less than $75,000 |      1,644       17.03       50.12
 $75,000 to less than $100,000 |      1,393       14.43       64.55
$100,000 to less than $150,000 |      1,610       16.68       81.23
              $150,000 or more |      1,406       14.56       95.79
                       Refused |        406        4.21      100.00
-------------------------------+-----------------------------------
                         Total |      9,654      100.00

. tab `family_income_variable', m nolab

     Family |
     income |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        384        3.98        3.98
          2 |        579        6.00        9.98
          3 |        708        7.33       17.31
          4 |        729        7.55       24.86
          5 |        795        8.23       33.10
          6 |      1,644       17.03       50.12
          7 |      1,393       14.43       64.55
          8 |      1,610       16.68       81.23
          9 |      1,406       14.56       95.79
         99 |        406        4.21      100.00
------------+-----------------------------------
      Total |      9,654      100.00

. 
. clonevar dL_finc = `family_income_variable'

. 
. *check if coded correctly
. tab dL_finc `family_income_variable', m

                      |                Family income
        Family income | Less than  $10,000 t  $20,000 t  $30,000 t |     Total
----------------------+--------------------------------------------+----------
    Less than $10,000 |       384          0          0          0 |       384 
$10,000 to less than  |         0        579          0          0 |       579 
$20,000 to less than  |         0          0        708          0 |       708 
$30,000 to less than  |         0          0          0        729 |       729 
$40,000 to less than  |         0          0          0          0 |       795 
$50,000 to less than  |         0          0          0          0 |     1,644 
$75,000 to less than  |         0          0          0          0 |     1,393 
$100,000 to less than |         0          0          0          0 |     1,610 
     $150,000 or more |         0          0          0          0 |     1,406 
              Refused |         0          0          0          0 |       406 
----------------------+--------------------------------------------+----------
                Total |       384        579        708        729 |     9,654 


                      |                Family income
        Family income | $40,000 t  $50,000 t  $75,000 t  $100,000  |     Total
----------------------+--------------------------------------------+----------
    Less than $10,000 |         0          0          0          0 |       384 
$10,000 to less than  |         0          0          0          0 |       579 
$20,000 to less than  |         0          0          0          0 |       708 
$30,000 to less than  |         0          0          0          0 |       729 
$40,000 to less than  |       795          0          0          0 |       795 
$50,000 to less than  |         0      1,644          0          0 |     1,644 
$75,000 to less than  |         0          0      1,393          0 |     1,393 
$100,000 to less than |         0          0          0      1,610 |     1,610 
     $150,000 or more |         0          0          0          0 |     1,406 
              Refused |         0          0          0          0 |       406 
----------------------+--------------------------------------------+----------
                Total |       795      1,644      1,393      1,610 |     9,654 


                      |     Family income
        Family income | $150,000     Refused |     Total
----------------------+----------------------+----------
    Less than $10,000 |         0          0 |       384 
$10,000 to less than  |         0          0 |       579 
$20,000 to less than  |         0          0 |       708 
$30,000 to less than  |         0          0 |       729 
$40,000 to less than  |         0          0 |       795 
$50,000 to less than  |         0          0 |     1,644 
$75,000 to less than  |         0          0 |     1,393 
$100,000 to less than |         0          0 |     1,610 
     $150,000 or more |     1,406          0 |     1,406 
              Refused |         0        406 |       406 
----------------------+----------------------+----------
                Total |     1,406        406 |     9,654 

. tab dL_finc `family_income_variable', m

                      |                Family income
        Family income | Less than  $10,000 t  $20,000 t  $30,000 t |     Total
----------------------+--------------------------------------------+----------
    Less than $10,000 |       384          0          0          0 |       384 
$10,000 to less than  |         0        579          0          0 |       579 
$20,000 to less than  |         0          0        708          0 |       708 
$30,000 to less than  |         0          0          0        729 |       729 
$40,000 to less than  |         0          0          0          0 |       795 
$50,000 to less than  |         0          0          0          0 |     1,644 
$75,000 to less than  |         0          0          0          0 |     1,393 
$100,000 to less than |         0          0          0          0 |     1,610 
     $150,000 or more |         0          0          0          0 |     1,406 
              Refused |         0          0          0          0 |       406 
----------------------+--------------------------------------------+----------
                Total |       384        579        708        729 |     9,654 


                      |                Family income
        Family income | $40,000 t  $50,000 t  $75,000 t  $100,000  |     Total
----------------------+--------------------------------------------+----------
    Less than $10,000 |         0          0          0          0 |       384 
$10,000 to less than  |         0          0          0          0 |       579 
$20,000 to less than  |         0          0          0          0 |       708 
$30,000 to less than  |         0          0          0          0 |       729 
$40,000 to less than  |       795          0          0          0 |       795 
$50,000 to less than  |         0      1,644          0          0 |     1,644 
$75,000 to less than  |         0          0      1,393          0 |     1,393 
$100,000 to less than |         0          0          0      1,610 |     1,610 
     $150,000 or more |         0          0          0          0 |     1,406 
              Refused |         0          0          0          0 |       406 
----------------------+--------------------------------------------+----------
                Total |       795      1,644      1,393      1,610 |     9,654 


                      |     Family income
        Family income | $150,000     Refused |     Total
----------------------+----------------------+----------
    Less than $10,000 |         0          0 |       384 
$10,000 to less than  |         0          0 |       579 
$20,000 to less than  |         0          0 |       708 
$30,000 to less than  |         0          0 |       729 
$40,000 to less than  |         0          0 |       795 
$50,000 to less than  |         0          0 |     1,644 
$75,000 to less than  |         0          0 |     1,393 
$100,000 to less than |         0          0 |     1,610 
     $150,000 or more |     1,406          0 |     1,406 
              Refused |         0        406 |       406 
----------------------+----------------------+----------
                Total |     1,406        406 |     9,654 

. 
. recode dL_finc 99 = .n //       Don't Know/refused
(dL_finc: 406 changes made)

. 
. label var dL_finc "family Income"

. lab val dL_finc inc_categories_`dataset'

. notes dL_finc:`dataset' Family Income Categories from `family_income_variable'
>  \ ckn`category'`dataset'.do mmk $S_DATE

. 
. 
. ***-----------------------------***
. // CREATE FAMILY INCOME VARIABLE - LARGER CATEGORIES
. 
. tab dL_finc f_income_recode, m

                      |            Family income recoded
        family Income |  $75,000+  $30-$74,9   <$30,000    Refused |     Total
----------------------+--------------------------------------------+----------
     Less than 10,000 |         0          0        384          0 |       384 
10,000 to less than 2 |         0          0        579          0 |       579 
20,000 to less than 3 |         0          0        708          0 |       708 
30,000 to less than 4 |         0        729          0          0 |       729 
40,000 to less than 5 |         0        795          0          0 |       795 
50,000 to less than 7 |         0      1,644          0          0 |     1,644 
75,000 to less than 1 |     1,393          0          0          0 |     1,393 
100,000 to less than  |     1,610          0          0          0 |     1,610 
      150,000 or more |     1,406          0          0          0 |     1,406 
                   .n |         0          0          0        406 |       406 
----------------------+--------------------------------------------+----------
                Total |     4,409      3,168      1,671        406 |     9,654 

. 
. label define inc_categories_broader ///
>         1       "Less than 30,000" ///
>         2       "30,000 to to less than 50,000" ///
>         3       "50,000 to less than 75,000" ///
>         4       "75,000 to less than 100,000" ///
>         5       "100,000 to less than 150,000" ///
>         6       "150,000 or more" ///
>         .n      "Refused" 

. 
. gen             dG_finc = .
(9,654 missing values generated)

. replace dG_finc = 1 if dL_finc == 1 | dL_finc == 2 | dL_finc == 3
(1,671 real changes made)

. replace dG_finc = 2 if dL_finc == 4 | dL_finc == 5
(1,524 real changes made)

. replace dG_finc = 3 if dL_finc == 6
(1,644 real changes made)

. replace dG_finc = 4 if dL_finc == 7
(1,393 real changes made)

. replace dG_finc = 5 if dL_finc == 8
(1,610 real changes made)

. replace dG_finc = 6 if dL_finc == 9
(1,406 real changes made)

. replace dG_finc = .n if dL_finc == .n
(406 real changes made, 406 to missing)

. 
. 
. label var dG_finc "family Income - categories more than 1000 respondents"

. lab val dG_finc inc_categories_broader

. notes dG_finc:`dataset' Family Income Categories from `family_income_variable'
>  \ ckn`category'`dataset'.do mmk $S_DATE

. 
. tab f_income dG_finc, m

                      |  family Income - categories more than 1000
                      |                 respondents
        Family income | Less than  30,000 to  50,000 to  75,000 to |     Total
----------------------+--------------------------------------------+----------
    Less than $10,000 |       384          0          0          0 |       384 
$10,000 to less than  |       579          0          0          0 |       579 
$20,000 to less than  |       708          0          0          0 |       708 
$30,000 to less than  |         0        729          0          0 |       729 
$40,000 to less than  |         0        795          0          0 |       795 
$50,000 to less than  |         0          0      1,644          0 |     1,644 
$75,000 to less than  |         0          0          0      1,393 |     1,393 
$100,000 to less than |         0          0          0          0 |     1,610 
     $150,000 or more |         0          0          0          0 |     1,406 
              Refused |         0          0          0          0 |       406 
----------------------+--------------------------------------------+----------
                Total |     1,671      1,524      1,644      1,393 |     9,654 


                      | family Income - categories more
                      |      than 1000 respondents
        Family income | 100,000 t  150,000 o    Refused |     Total
----------------------+---------------------------------+----------
    Less than $10,000 |         0          0          0 |       384 
$10,000 to less than  |         0          0          0 |       579 
$20,000 to less than  |         0          0          0 |       708 
$30,000 to less than  |         0          0          0 |       729 
$40,000 to less than  |         0          0          0 |       795 
$50,000 to less than  |         0          0          0 |     1,644 
$75,000 to less than  |         0          0          0 |     1,393 
$100,000 to less than |     1,610          0          0 |     1,610 
     $150,000 or more |         0      1,406          0 |     1,406 
              Refused |         0          0        406 |       406 
----------------------+---------------------------------+----------
                Total |     1,610      1,406        406 |     9,654 

. 
. // Binary Income Categories
. 
. local inc_var dG_finc

. tab `inc_var', m nolab

     family |
   Income - |
 categories |
  more than |
       1000 |
respondents |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      1,671       17.31       17.31
          2 |      1,524       15.79       33.10
          3 |      1,644       17.03       50.12
          4 |      1,393       14.43       64.55
          5 |      1,610       16.68       81.23
          6 |      1,406       14.56       95.79
         .n |        406        4.21      100.00
------------+-----------------------------------
      Total |      9,654      100.00

. 
. *refused code(s) for `inc_var'
. local inc_missing_condition `"`inc_var' == .n"' //Refused

. 
. local incl30k_condition         `"`inc_var' == 1"' //   

. local inc30_50k_condition       `"`inc_var' == 2"' //   

. local inc50_75k_condition       `"`inc_var' == 3"'      // 

. local inc75_100k_condition      `"`inc_var' == 4"'      // 

. local inc100_150k_condition `"`inc_var' == 5"'  // 

. local inc150kp_condition        `"`inc_var' == 6"'      // 

. 
. local inclist "l30k 30_50k 50_75k 75_100k 100_150k 150kp"

. foreach inc of local inclist {
  2.         gen dB_inc_`inc' = 0
  3.         // Replace each with . for missing 
.                 if "`inc_missing_condition'" != "none" {
  4.                         replace dB_inc_`inc' = . if `inc_missing_condition'
  5.                 }
  6.         label var dB_inc_`inc' "Inc category `inc'"
  7.         label define dB_inc_`inc' 0 "Not `inc'" 1 "`inc'"
  8.                 label val dB_inc_`inc' dB_inc_`inc'
  9.         notes dB_inc_`inc': Income category `inc'. created from `inc_var' v
> ariable in `dataset' \ ckn`category'`dataset'.do mmk $S_DATE
 10. 
.         replace dB_inc_`inc' = 1 if `inc`inc'_condition'
 11. }
(406 real changes made, 406 to missing)
(1,671 real changes made)
(406 real changes made, 406 to missing)
(1,524 real changes made)
(406 real changes made, 406 to missing)
(1,644 real changes made)
(406 real changes made, 406 to missing)
(1,393 real changes made)
(406 real changes made, 406 to missing)
(1,610 real changes made)
(406 real changes made, 406 to missing)
(1,406 real changes made)

. 
. tab `inc_var' dG_finc, m

      family Income - |  family Income - categories more than 1000
 categories more than |                 respondents
     1000 respondents | Less than  30,000 to  50,000 to  75,000 to |     Total
----------------------+--------------------------------------------+----------
     Less than 30,000 |     1,671          0          0          0 |     1,671 
30,000 to to less tha |         0      1,524          0          0 |     1,524 
50,000 to less than 7 |         0          0      1,644          0 |     1,644 
75,000 to less than 1 |         0          0          0      1,393 |     1,393 
100,000 to less than  |         0          0          0          0 |     1,610 
      150,000 or more |         0          0          0          0 |     1,406 
              Refused |         0          0          0          0 |       406 
----------------------+--------------------------------------------+----------
                Total |     1,671      1,524      1,644      1,393 |     9,654 


      family Income - | family Income - categories more
 categories more than |      than 1000 respondents
     1000 respondents | 100,000 t  150,000 o    Refused |     Total
----------------------+---------------------------------+----------
     Less than 30,000 |         0          0          0 |     1,671 
30,000 to to less tha |         0          0          0 |     1,524 
50,000 to less than 7 |         0          0          0 |     1,644 
75,000 to less than 1 |         0          0          0 |     1,393 
100,000 to less than  |     1,610          0          0 |     1,610 
      150,000 or more |         0      1,406          0 |     1,406 
              Refused |         0          0        406 |       406 
----------------------+---------------------------------+----------
                Total |     1,610      1,406        406 |     9,654 

. tab `inc_var' dB_inc_l30k, m

      family Income - |
 categories more than |        Inc category l30k
     1000 respondents |  Not l30k       l30k          . |     Total
----------------------+---------------------------------+----------
     Less than 30,000 |         0      1,671          0 |     1,671 
30,000 to to less tha |     1,524          0          0 |     1,524 
50,000 to less than 7 |     1,644          0          0 |     1,644 
75,000 to less than 1 |     1,393          0          0 |     1,393 
100,000 to less than  |     1,610          0          0 |     1,610 
      150,000 or more |     1,406          0          0 |     1,406 
              Refused |         0          0        406 |       406 
----------------------+---------------------------------+----------
                Total |     7,577      1,671        406 |     9,654 

. tab `inc_var' dB_inc_75_100k, m

      family Income - |
 categories more than |       Inc category 75_100k
     1000 respondents | Not 75_10    75_100k          . |     Total
----------------------+---------------------------------+----------
     Less than 30,000 |     1,671          0          0 |     1,671 
30,000 to to less tha |     1,524          0          0 |     1,524 
50,000 to less than 7 |     1,644          0          0 |     1,644 
75,000 to less than 1 |         0      1,393          0 |     1,393 
100,000 to less than  |     1,610          0          0 |     1,610 
      150,000 or more |     1,406          0          0 |     1,406 
              Refused |         0          0        406 |       406 
----------------------+---------------------------------+----------
                Total |     7,855      1,393        406 |     9,654 

. 
. 
. // SAVE
. save $deriv/ckn`category'`dataset'.dta, replace 
file ~/Documents/SocResearch/COVID_Knowledge_News/data/data_derv/ckn04_inc01_Pew
> June2020.dta saved

. 
. ***-----------------------------***
. // # FAMILY INCOME - CONTINUOUS
. ***-----------------------------***
. /*
> local inc_var `"dL_finc"' //Specify which variable using as income variable
> local inc_type "family" 
> local year "year"
> 
> // A) ASEC CONTINUOUS INCOME CONVERSIONS
> 
> *! Convert categorical to continuous income values, independent of values of c
> ategories
> *! creates numeric variables indicating edges of income categories,
> *! and draws random continuous income from CPS-ASEC from between those edges
> *! several locals must be specified before running this:
> 
>         // `inc_type' specifies either family, family, or personal as income t
> ypes
>         // `inc_var' is the name of the categorical income variable in the ori
> ginal dataset
>         // `year' is the name of the year variable (any form of time is fine, 
> as long as it's numeric)
> 
> 
> // #1 SETUP
>         noisily
>         set seed 1
>         compress
>         version 13
>         
>         //Create local for levels of income = e.g., levelsof year, local(years
> )
>         levelsof `inc_var', local(`"`inc_var'_levels"')
> 
>         //Create variable will need to store income level
>         gen `inc_var'_cat = " "
> 
>         // sort for later join & create variable recording the original observ
> ation order within the identifier
>         bysort `year' `inc_var': gen year_inc_id = _n
> 
> // #2 create numeric variables indicating edges of income categories //
>         // Note: for more detail on if-command and Stata regular expressions u
> sed to create this, see:
>                 *http://www.stata.com/statalist/archive/2013-03/msg00654.html
>                 *http://www.stata.com/support/faqs/programming/if-command-vers
> us-if-qualifier/
>                 *http://stats.idre.ucla.edu/stata/faq/how-can-i-extract-a-port
> ion-of-a-string-variable-using-regular-expressions/
> 
>         // List income levels
>         di "The income levels are: " "``inc_var'_levels'"
> 
>         * DECODE to CONVERT LABELS TO STRING VARIABLES
>         decode `inc_var', gen(inc_decoded)
>         *describe inc_decoded
> 
>         tempfile working_regex
>         save `working_regex', replace
> 
>         // loop through all values of income categories (`inc_level') in `data
> set'
>         foreach inc_level of local `inc_var'_levels {
> 
>                 use `working_regex', clear
> 
>                 // Keep the data if the income variable is equal to the curren
> t income level (of the loop)
>                 keep if `inc_var' == `inc_level'  // do this to make sure not 
> replacing things with wrong inc_var_cat later
>                         di "The current inc_level is: " `inc_level'
> 
>                         // Make sure working with proper income label text in 
> `inc_var'_cat
>                         replace `inc_var'_cat = inc_decoded
> 
>                         // text at beginning of the string:
>                                 if regexm(`inc_var'_cat, "^[a-z/A-Z]+") == 1 {
>                                         di "The inc_level " `inc_level' " is a
> t the lowest end of the income range"
>                                         // for lower-bound values, will match 
> if text at beginning of line
>                                         destring `inc_var'_cat, ignore("Less t
> han LESS THAN Under,$ ") generate(`inc_var'_ub) // parses out these words
>                                         gen `inc_var'_lb = 0
>                                 }
> 
>                         // text at end of the string:
>                                 else if regexm(`inc_var'_cat, "[a-z/A-Z]+$") =
> = 1 {
>                                         di "The inc_level " `inc_level' " is a
> t the highest end of the income range"
>                                         // for upper-bound values, will match 
> if text at end of line
>                                         destring `inc_var'_cat, ignore("and ov
> er or over,$ or more OR MORE") generate(`inc_var'_lb) // parses out these word
> s
>                                         gen `inc_var'_ub = 999999  // my topco
> de for asec purposes
>                                 }
> 
>                         // if `inc_var'_cat is missing, keep it missing for lo
> wer_bound and upper_bound
>                                 else if regexm(`inc_var'_cat, "[.][a-z]") == 1
>  {
>                                         di "The inc_level " `inc_level' " is a
> ll missing"
>                                  // for missing values (a bit excessive, since
>  already missing, but good to be sure)
>                                         gen `inc_var'_lb = .
>                                         gen `inc_var'_ub = .
>                                 }
> 
>                         // for labels with 2 numbers in them
>                                 else if regexm(`inc_var'_cat, "[0-9]+$") == 1 
> {
>                                 // regex "[0-9]+$" will match anything of form
>  $0000 or 0000 at end of line -
>                                 // since those at lowest and highest ranges ha
> ve already been matched (using text), this leaves those with ranges
>                                                 di "The inc_level " `inc_level
> ' " has a lower and an upper level"
>                                                 split `inc_var'_cat, ///
>                                                         parse("-" "to" "-" "to
>  under" "to less than" "UP TO" "but less than") ///
>                                                         ignore(" "$,) destring
>                                                 gen `inc_var'_lb = `inc_var'_c
> at1
>                                                 gen `inc_var'_ub = `inc_var'_c
> at2
>                                 }
> 
>                         // error - in case doesn't fit any existing category
>                                 else {
>                                         di "The inc_level " `inc_level' " does
>  not fit any of the existing regular expressions designs."
>                                 }
> 
>                         // Save these new data - include numerical income uppe
> r and lower bounds in tempfile for later for merging, etc.
>                                 tempfile temp_`inc_level'
>                                 save `temp_`inc_level'', replace
> 
>                         // create locals to use later for selecting appropriat
> e ASEC bounds
>                                 local upper_bound = `inc_var'_ub
>                                 local lower_bound = `inc_var'_lb
> 
> 
>                         // #3 Now, still within the single-income-level loop i
> n original dataset, loop through each year in the dataset:
> 
>                                 //Levels of year variable to loop through year
> s in dataset
>                                         levelsof `year', local(years)
>                                         di "Create local variable years to loo
> p through within that income bracket - values:" `years'
> 
>                                 foreach y of local years { // loop through all
>  years in `dataset'
> 
>                                         use `temp_`inc_level'', clear
> 
>                                         // summarize so can get count of how m
> any individuals in that income level during year (in dataset)
>                                         quietly summarize if `year' == `y' & `
> inc_var' == `inc_level'
>                                         local sample_size = r(N) // count how 
> many rows there are in survey dataset
> 
>                                         // create temporary file of just this 
> income level and year can merge ASEC incomes back into later
>                                         keep if `year' == `y' & `inc_var' == `
> inc_level'
>                                         tempfile premerge_`inc_level'_`y'
>                                         save `premerge_`inc_level'_`y'', repla
> ce
> 
>                                         // #3A) Selects appropriate ASEC datas
> et (of a certain type, either fam, hh, or pers) //
> 
>                                         if "`inc_type'" == "family" {
>                                                 use $deriv/ckn01_impe03_asec.d
> ta, clear // use ASEC family dataset
>                                                 local asec_inc_var "ftotval" /
> / name in ASEC dataset
>                                                 local final_inc_var "dV_finc"
>                                                 di "Calculating family income 
> using ftotval ASEC variable."
>                                         }
>                                         else if "`inc_type'" == "family" {
>                                                 use $deriv/ckn01_impe03_asec.d
> ta, clear // use ASEC family dataset
>                                                 local asec_inc_var "hhincome" 
> // name in ASEC dataset
>                                                 local final_inc_var "dV_hinc"
>                                                 di "Calculating family income 
> using hhincome ASEC variable."
>                                         }
>                                         else if "`inc_type'" == "personal" {
>                                                 use $deriv/ckn01_impe03_asec.d
> ta, clear // use ASEC individual-weighted dataset
>                                                 local asec_inc_var "inctot" //
>  name in ASEC dataset
>                                                 local final_inc_var "dV_rinc"
>                                                 di "Calculating personal incom
> e using inctot ASEC variable."
>                                         }
>                                         else {
>                                                 display as error "Income types
>  allowed: family, family, or personal."
>                                         }
> 
>                                         // #3B) Takes a random draw of number 
> of incomes w/in that income boundary and year from the CPS-ASEC
> 
>                                                 // Keep ASEC data if within in
> come bounds and for given year
> 
>                                                 keep if `year' == `y' & ///
>                                                         `asec_inc_var' >= `low
> er_bound' & ///
>                                                         `asec_inc_var' <= `upp
> er_bound'
>                                                 di "Calculating income between
>  $`lower_bound' and $`upper_bound' for `y' year."
> 
>                                                 sample `sample_size', count
>                                                         // keeps sample_size (
> N) of ASEC sample
>                                                         // Note: svy: NOT SUPP
> ORTED FOR SAMPLE
>                                                 di "Sampling N=`sample_size' i
> ncomes from ASEC `asec_inc_var' dataset at `inc_level' ($`lower_bound'-`upper_
> bound') level and year `y'."
> 
>                                                 // Add new columns for lower_b
> ound and upper_bound using locals created from values above
>                                                 // these will be used to merge
>  ASEC data back into original dataset
>                                                 gen `inc_var'_lb = `lower_boun
> d'
>                                                 gen `inc_var'_ub = `upper_boun
> d'
> 
>                                                 // Also save case id for mergi
> ng later
>                                                 gen year_inc_id = _n
> 
>                                                 // Income values are assigned 
> to rows within the income category in the temp survey dataset
>                                                 quietly merge 1:1 `year' `inc_
> var'_lb `inc_var'_ub year_inc_id using `premerge_`inc_level'_`y''
>                                                 di "Merged ASEC values with or
> iginal dataset for inc_level " `inc_level' " ($`lower_bound'-`upper_bound') an
> d year `y'."
> 
> 
>                                                 // Save these new data with ye
> arly ASEC continuous data in a tempfile we can use later for merging, etc.
>                                                 tempfile `inc_level'_`y'
>                                                 save ``inc_level'_`y'', replac
> e
>                                                 di "Saved ASEC continuous data
>  for inc_level " `inc_level' " ($`lower_bound'-`upper_bound') and year `y' in 
> file "
> 
>                                 }       // end of loop through all years of `d
> ataset' dataset
> 
>                         di "Moved outside loop of years for income bracket" `i
> nc_level' " ($`lower_bound'-`upper_bound')."
> 
>                 // append all years within one income bracket
>                         tokenize `years'
>                         local first `1'
>                         use ``inc_level'_`1'', clear
>                         macro shift
>                         local rest `*'
> 
>                 // now loop through and append each yearly temp file created e
> arlier
>                         foreach data in `*' {
>                                 append using ``inc_level'_`data''
>                         }
>                         di "Appended all years within income bracket " `inc_le
> vel' " ($`lower_bound'-`upper_bound')."
> 
>                 // create new tempfile to save all years data for a given inco
> me level
>                         tempfile temp_`inc_level'_allyrs
>                         save `temp_`inc_level'_allyrs', replace
>                         di "Saved new tempfile temp_`inc_level'_allyrs with al
> l years for income bracket" `inc_level' " ($`lower_bound'-`upper_bound')."
> 
> 
>         } //  end of loop through all income brackets of `dataset' dataset
> 
> // append all continuous incomes
> // now bring together all files created in above loop as tempfiles
>         tokenize ``inc_var'_levels'
>         local first `1'
>         use `temp_`1'_allyrs', clear
>         macro shift
>         local rest `*'
> 
> // now loop through and append each temp file created within income bracket lo
> op
>         foreach data in `*' {
>                 append using `temp_`data'_allyrs'
>         }
> 
> 
> // CLEAN UP
> 
> // drop variables used in creating lower and upper bounds - no longer necessar
> y, possibly confusing
>         drop `inc_var'_cat1
>         drop `inc_var'_cat2
>         drop  inc_decoded
> 
> // Label new upper and lower income bound variables
>         label variable `inc_var'_lb "`inc_var' Lower Bound"
>         label variable `inc_var'_ub "`inc_var' Upper Bound"
> 
> // Label new continuous income variable
>         rename `asec_inc_var' `final_inc_var'
>                 label var `final_inc_var' "`dataset' continuous `inc_type' inc
> ome"
> 
> sort `year' `inc_var' year_inc_id
> drop  year_inc_id
> 
> drop _merge
> 
> ***-----------***
> 
> // C) CREATE NATURAL LOG INCOME VARIABLES
> 
> gen dV_finc_1k = dV_finc / 1000
> 
> gen dV_finc_ln = ln(dV_finc)
> gen dV_finc_ln_1k = ln(dV_finc_1k)
> 
> replace dV_finc_ln = 0 if dV_finc == 0
> replace dV_finc_ln_1k = 0 if dV_finc == 0
> 
> 
> ***-----------------------------***
> //  CLEANUP
> ***-----------------------------***
> 
> * Drop any years not in dataset, so get rid of extra years merged in
> drop if year != 2019
> 
> *Drop ASEC variables
> drop serial month cpsid asecflag mish hhincome hrhhid hrhhid2 pernum cpsidp as
> ecwt age lfproxy inctot 
> 
> order f_income dL_finc dV_finc dV_finc_1k dV_finc_ln dV_finc_ln_1k
> 
> ***-----------------------------***
> //  SAVE OVERALL DATASET
> ***-----------------------------***
> 
> label data "`dataset' data with continuous family income measures"
> notes: ckn`category'`dataset' \ `dataset' with continuous family incomes  \ ck
> n`category'`dataset'.do mmk $S_DATE
> compress
> datasignature set, reset
> 
> save $deriv/ckn`category'`dataset', replace
> 
> ***-----------------------------***
> */
. 
. log close ckn`category'`dataset'
      name:  ckn04_inc01_PewJune2020
       log:  /Users/mollymking/Documents/SocResearch/COVID_Knowledge_News/covid_
> knowledge_news/stata/ckn04_inc01_PewJune2020.log
  log type:  text
 closed on:  14 May 2021, 17:28:46
--------------------------------------------------------------------------------
